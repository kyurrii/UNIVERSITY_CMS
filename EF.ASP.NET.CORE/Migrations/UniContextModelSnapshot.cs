// <auto-generated />
using System;
using EF.ASP.NET.CORE;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EF.ASP.NET.CORE.Migrations
{
    [DbContext(typeof(UniContext))]
    partial class UniContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EF.ASP.NET.CORE.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name");

                    b.Property<int>("PassCredits");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("EF.ASP.NET.CORE.Models.HomeTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CourseId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<int>("Number");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("HomeTask");
                });

            modelBuilder.Entity("EF.ASP.NET.CORE.Models.HomeTaskAssessment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int?>("HomeTaskId");

                    b.Property<bool>("IsComplete");

                    b.Property<int?>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("HomeTaskId");

                    b.HasIndex("StudentId");

                    b.ToTable("HomeTaskAssessment");
                });

            modelBuilder.Entity("EF.ASP.NET.CORE.Models.Lecturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate");

                    b.Property<int?>("CourseId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Lecturer");
                });

            modelBuilder.Entity("EF.ASP.NET.CORE.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Email");

                    b.Property<string>("GitHubLink");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("EF.ASP.NET.CORE.Models.StudentCourse", b =>
                {
                    b.Property<int>("CourseId");

                    b.Property<int>("StudentId");

                    b.HasKey("CourseId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourse");
                });

            modelBuilder.Entity("EF.ASP.NET.CORE.Models.HomeTask", b =>
                {
                    b.HasOne("EF.ASP.NET.CORE.Models.Course", "Course")
                        .WithMany("HomeTasks")
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("EF.ASP.NET.CORE.Models.HomeTaskAssessment", b =>
                {
                    b.HasOne("EF.ASP.NET.CORE.Models.HomeTask", "HomeTask")
                        .WithMany("HomeTaskAssessments")
                        .HasForeignKey("HomeTaskId");

                    b.HasOne("EF.ASP.NET.CORE.Models.Student", "Student")
                        .WithMany("HomeTaskAssessments")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("EF.ASP.NET.CORE.Models.Lecturer", b =>
                {
                    b.HasOne("EF.ASP.NET.CORE.Models.Course", "Course")
                        .WithMany("Lecturers")
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("EF.ASP.NET.CORE.Models.StudentCourse", b =>
                {
                    b.HasOne("EF.ASP.NET.CORE.Models.Course", "Course")
                        .WithMany("StudentCour")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EF.ASP.NET.CORE.Models.Student", "Student")
                        .WithMany("CourseStud")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
